ext.gradle_root = rootDir.absolutePath + "/gradle"


def build_versions = [
        target_sdk : 28,
        min_sdk    : 19,
        build_tools: "28.0.3",
]
ext.build_versions = build_versions


def app_config = [
        applicationId  : "com.yc.kuaiyin",
        versionCode: 1000,
        versionName: '1.000',
]
ext.app_config = app_config



def versions = [
        android_gradle_plugin    : '3.4.2',
        kotlin                   : "1.3.40",

        multidex                 : "1.0.0",
        support                  : "1.0.0",
        constraint_layout        : "2.0.0-alpha2",

        lifecycle                : "2.0.0",
        paging                   : "2.1.0-beta01",
        navigation               : "1.0.0-alpha07",
        room                     : "2.1.0-alpha02",
        work                     : "1.0.0-alpha10",

        rxjava                   : "2.1.3",
        rxkotlin                 : "2.3.0",
        rxandroid                : "2.0.1",
        rxbinding                : "3.0.0-alpha1",

        retrofit                 : "2.3.0",
        retrofit_fastjson        : "2.1.0",

        glide                    : "4.8.0",

        butterknife              : '9.0.0-rc2',

        router                   : '2.6.1',
        parceler                 : '1.2',

        wechat_sdk               : '5.1.6',
        bugly_app                : '1.3.4',
        bugly_native             : '3.3.1',

        sensorsdata_gradle_plugin: '2.2.1',
        sensorsdata_runtime      : '2.1.2',

        fastjson                 : '1.1.70.android',
        and_permission           : '2.0.0-rc12',
]
ext.versions = versions



def deps = [
        android_gradle_plugin: "com.android.tools.build:gradle:$versions.android_gradle_plugin",
        fastjson             : "com.alibaba:fastjson:$versions.fastjson",
        and_permission       : "com.yanzhenjie:permission:$versions.and_permission",
        weibo_sdk            : "com.sina.weibo.sdk:core:4.3.6:openDefaultRelease@aar",
]




def kotlin = [
        stdlib: "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin",
        plugin: "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin",
]
deps.kotlin = kotlin

def support = [
        multidex         : "com.android.support:multidex:$versions.multidex",
        v4               : "androidx.legacy:legacy-support-v4:$versions.support",
        annotations      : "androidx.annotation:annotation:$versions.support",
        app_compat       : "androidx.appcompat:appcompat:$versions.support",
        recyclerview     : "androidx.recyclerview:recyclerview:$versions.support",
        cardview         : "androidx.cardview:cardview:$versions.support",
        design           : "com.google.android.material:material:$versions.support",
        core_utils       : "androidx.legacy:legacy-support-core-utils:$versions.support",
        constraint_layout: "androidx.constraintlayout:constraintlayout:$versions.constraint_layout",
]
deps.support = support

def lifecycle = [
        runtime   : "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle",
        extensions: "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle",
        java8     : "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle",
        compiler  : "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle",
]
deps.lifecycle = lifecycle

def room = [
        runtime : "androidx.room:room-runtime:$versions.room",
        compiler: "androidx.room:room-compiler:$versions.room",
        rxjava2 : "androidx.room:room-rxjava2:$versions.room",
]
deps.room = room

deps.paging_ktx = "androidx.paging:paging-runtime-ktx:$versions.paging"

def work = [
        runtime    : "android.arch.work:work-runtime:$versions.work",
        runtime_ktx: "android.arch.work:work-runtime-ktx:$versions.work",
]
deps.work = work

def navigation = [
        ui_ktx          : "android.arch.navigation:navigation-ui-ktx:$versions.navigation",
        runtime         : "android.arch.navigation:navigation-runtime:$versions.navigation",
        runtime_ktx     : "android.arch.navigation:navigation-runtime-ktx:$versions.navigation",
        fragment        : "android.arch.navigation:navigation-fragment:$versions.navigation",
        fragment_ktx    : "android.arch.navigation:navigation-fragment-ktx:$versions.navigation",
        safe_args_plugin: "android.arch.navigation:navigation-safe-args-gradle-plugin:$versions.navigation",
]
deps.navigation = navigation


def rx = [
        rxjava: "io.reactivex.rxjava2:rxjava:$versions.rxjava",
        rxkotlin: "io.reactivex.rxjava2:rxkotlin:$versions.rxkotlin",
        rxandroid: "io.reactivex.rxjava2:rxandroid:$versions.rxandroid",
        rxbinding: "com.jakewharton.rxbinding3:rxbinding:$versions.rxbinding",
]
deps.rx = rx

def retrofit = [
        runtime : "com.squareup.retrofit2:retrofit:$versions.retrofit",
        rxjava2 : "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit",
        fastjson: "org.ligboy.retrofit2:converter-fastjson-android:$versions.retrofit_fastjson",
]
deps.retrofit = retrofit

def glide = [
        runtime : "com.github.bumptech.glide:glide:$versions.glide",
        compiler: "com.github.bumptech.glide:compiler:$versions.glide",
]
deps.glide = glide

def router = [
        api     : "com.github.yjfnypeu.Router:router-api:$versions.router",
        compiler: "com.github.yjfnypeu.Router:router-compiler:$versions.router",
]
deps.router = router

def parceler = [
        api     : "com.github.yjfnypeu.Parceler:api:$versions.parceler",
        compiler: "com.github.yjfnypeu.Parceler:compiler:$versions.parceler",
]
deps.parceler = parceler

def butterknife = [
        gradle_plugin: "com.jakewharton:butterknife-gradle-plugin:$versions.butterknife",
        runtime      : "com.jakewharton:butterknife:$versions.butterknife",
        compiler     : "com.jakewharton:butterknife-compiler:$versions.butterknife",
]
deps.butterknife = butterknife

def bugly = [
        crashreport_upgrade: "com.tencent.bugly:crashreport_upgrade:$versions.bugly_app",
        nativecrashreport  : "com.tencent.bugly:nativecrashreport:$versions.bugly_native",
]
deps.bugly = bugly

def tencent = [
        wechat_sdk  : "com.tencent.mm.opensdk:wechat-sdk-android-without-mta:$versions.wechat_sdk",
        bugly_app_report: "com.tencent.bugly:crashreport_upgrade:$versions.bugly_app",
        bugly_native_report  : "com.tencent.bugly:nativecrashreport:$versions.bugly_native",
]
deps.tencent = tencent

def sensorsdata = [
        gradle_plugin: "com.sensorsdata.analytics.android:android-gradle-plugin2:$versions.sensorsdata_gradle_plugin",
        runtime      : "com.sensorsdata.analytics.android:SensorsAnalyticsSDK:$versions.sensorsdata_runtime",
        jm_aar       : 'com.jm.android.sensor:sensorsdk:2.0.4@aar',
]
deps.sensorsdata = sensorsdata







ext.deps = deps


def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.mavenCentral()
    handler.maven { url "https://jitpack.io" }

    // sensorsdata maven
    handler.maven { url "https://dl.bintray.com/zouyuhan/maven" }
    handler.maven { url "http://app.int.jumei.com:8081/nexus/content/repositories/release/" }

    // alipay libs
    handler.flatDir { dirs 'libs','../sdk/alipay/libs' }

    // weibo maven and libs
//    handler.maven { url "https://dl.bintray.com/thelasterstar/maven/" }
    handler.flatDir { dirs 'libs','../sdk/weibo/libs' }
}
ext.addRepos = this.&addRepos
